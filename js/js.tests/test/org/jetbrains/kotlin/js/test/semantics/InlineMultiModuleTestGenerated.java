/*
 * Copyright 2010-2016 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.kotlin.js.test.semantics;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("js/js.translator/testData/inlineMultiModule/cases")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class InlineMultiModuleTestGenerated extends AbstractInlineMultiModuleTest {
    public void testAllFilesPresentInCases() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("js/js.translator/testData/inlineMultiModule/cases"), Pattern.compile("^(.+)\\.kt$"), true);
    }

    @TestMetadata("anotherModuleValInClosure.kt")
    public void testAnotherModuleValInClosure() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/anotherModuleValInClosure.kt");
        doTest(fileName);
    }

    @TestMetadata("callableReference.kt")
    public void testCallableReference() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/callableReference.kt");
        doTest(fileName);
    }

    @TestMetadata("calledByFqName.kt")
    public void testCalledByFqName() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/calledByFqName.kt");
        doTest(fileName);
    }

    @TestMetadata("extensionLambda.kt")
    public void testExtensionLambda() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/extensionLambda.kt");
        doTest(fileName);
    }

    @TestMetadata("externalInlineCallDecomposed.kt")
    public void testExternalInlineCallDecomposed() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/externalInlineCallDecomposed.kt");
        doTest(fileName);
    }

    @TestMetadata("externalInlineNewDecomposed.kt")
    public void testExternalInlineNewDecomposed() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/externalInlineNewDecomposed.kt");
        doTest(fileName);
    }

    @TestMetadata("lambda.kt")
    public void testLambda() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/lambda.kt");
        doTest(fileName);
    }

    @TestMetadata("lambdaCalledInObjectLiteral.kt")
    public void testLambdaCalledInObjectLiteral() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/lambdaCalledInObjectLiteral.kt");
        doTest(fileName);
    }

    @TestMetadata("lambdaWithClosure.kt")
    public void testLambdaWithClosure() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/lambdaWithClosure.kt");
        doTest(fileName);
    }

    @TestMetadata("localNameClash.kt")
    public void testLocalNameClash() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/localNameClash.kt");
        doTest(fileName);
    }

    @TestMetadata("method.kt")
    public void testMethod() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/method.kt");
        doTest(fileName);
    }

    @TestMetadata("parameterWithDefaultValue.kt")
    public void testParameterWithDefaultValue() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/parameterWithDefaultValue.kt");
        doTest(fileName);
    }

    @TestMetadata("simple.kt")
    public void testSimple() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inlineMultiModule/cases/simple.kt");
        doTest(fileName);
    }
}
